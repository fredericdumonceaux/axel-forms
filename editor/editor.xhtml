<!DOCTYPE html>
<!--
This file is a stripped down version of the original axel/editor/editor.html

It has been extended to load the AXEL-FORMS extensions (AXEL-MICRO + Plugins + Bindings)

It uses the 'AXEL-TEMPLATE-READY' event to install bindings,
so the editor.js (which is imported from AXEL) MUST trigger it.

WARNING: this currently works only if axel-forms is placed as a sibling of axel in your file system

Author: Stephane Sire
-->
<html lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xt="http://ns.inria.org/xtiger">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="description" content="Template-driven document editor done with AXEL-FORMS (Adaptable XML Editing Library)"></meta>
    <meta name="keywords" content="editor, authoring application, template, XTiger, XML, AXEL"></meta>
    <meta name="author" content="StÃ©phane Sire"></meta>

    <title>AXEL-FORMS editor</title>

    <!-- JQuery, jQuery UI dependencies-->
    <link rel="stylesheet" type="text/css"
          href="../../axel/3rd-part/jquery/css/ui-lightness/jquery-ui-1.8.18.custom.css"></link>
    <script type="text/javascript" src="../../axel/3rd-part/jquery/js/jquery-1.7.1.min.js"></script>
    <script type="text/javascript" src="../../axel/3rd-part/jquery/js/jquery-ui-1.8.18.custom.min.js"></script>
    <!-- AXEL dependency (see also below)-->
    <script type="text/javascript" src="../../axel/axel/axel.js"></script>

    <!-- alternative loaders and serializers -->
    <!-- <script type="text/javascript" src="../src/editor/classical/htmlloader.js"></script>
    <script type="text/javascript" src="../src/editor/classical/xmlrobustloader.js"></script>
    <script type="text/javascript" src="../src/editor/classical/htmlserializer.js"></script> -->

    <!-- 3rd party dependencies -->
    <script type="text/javascript" src="../3rd-part/select2/select2.min.js"></script>

    <!-- AXEL-FORMS -->
    <!-- plugins -->
    <script type="text/javascript" src="../src/plugins/choice.js"></script>
    <script type="text/javascript" src="../src/plugins/input.js"></script>
    <!-- filters -->
    <script type="text/javascript" src="../src/filters/select2.js"></script>
    <!-- commands -->
    <script type="text/javascript" src="../src/core/command.js">//</script>
    <script type="text/javascript" src="../src/commands/transform.js">//</script>
    <script type="text/javascript" src="../src/commands/dump.js">//</script>
    <script type="text/javascript" src="../src/commands/save.js">//</script>
    <script type="text/javascript" src="../src/commands/validate.js">//</script>
    <!-- bindings -->
    <script type="text/javascript" src="../src/core/binding.js"></script>
    <script type="text/javascript" src="../src/bindings/interval.js"></script>
    <script type="text/javascript" src="../src/bindings/condition.js"></script>
    <script type="text/javascript" src="../src/bindings/regexp.js"></script>
    <script type="text/javascript" src="../src/bindings/unique.js"></script>
    <script type="text/javascript" src="../src/bindings/blacklist.js"></script>
    <script type="text/javascript" src="../src/bindings/select.js"></script>
    <script type="text/javascript" src="../src/bindings/clear.js"></script>
    <script type="text/javascript" src="../src/bindings/required.js"></script>

    <!-- Editor application   -->
    <link type="text/css" rel="stylesheet" href="../../axel/editor/extras/editor.css"></link>
    <!--[if IE 7]>
<style type="text/css">
#frameContainer {
  height: 85%;
}
</style>
    <![endif]-->
    <script type="text/javascript" src="../../axel/editor/extras/editor.js"></script>
    <script type="text/javascript" src="templates.js"></script>
    <script type="text/javascript" charset="utf-8">
      (function () {
         var appController;
         // Call this method if you didn't include the style sheet in the document you have transformed to a form
         function injectStyleSheet ( myDoc, url ) {
           var head = myDoc.getElementsByTagName('head')[0];
           if (head) {
             var link = myDoc.createElement('link');
             link.setAttribute('rel','stylesheet');
             link.setAttribute('type', 'text/css');
             link.setAttribute('href', url); 
             head.appendChild(link);
           } else {
             xtiger.cross.log('debug', "cannot inject editor's style sheet because target document has no head section");
           }
         }
         function onTemplateTransformed () {
           var iframeDoc, ed;
           var iframe = document.getElementById('container');
           if (iframe.contentDocument) {
             iframeDoc = iframe.contentDocument;
           } else if (iframe.contentWindow) { // IE7
             iframeDoc = iframe.contentWindow.document;
           }
           if (iframeDoc &amp;&amp; ($('script[data-bundles-path]').length === 0)) { // not a self-transformed document
             if (! appController.curForm) { // template with embedded transformation skipped by editor.js
               xtiger.cross.log('debug', 'command installation (post-template transformation)');
               ed = $axel.command.install(iframeDoc);
               if (ed.length >= 1) {
                 // TODO: currently manages only 1 AXEL editor per document
                 xtiger.cross.log('debug', 'binding installation (post-template transformation)');
                 $axel.binding.install(iframeDoc);
                 injectStyleSheet(iframeDoc, appController.xttMakeLocalURLFor('../../axel/axel/axel.css'));
                 appController.curForm = $axel('#container');
                 appController.log('Template with embedded transformation transformed with success', 0);
                 appController.activateDocumentCommands();
               } else {
                 appController.log('Template with embedded transformation failed, no editor has been generated', 1);
               }
             } else {
               xtiger.cross.log('debug', 'binding installation (post-template transformation)');
               $axel.binding.install(iframeDoc);
             }
           } else {
             xtiger.cross.log('debug', 'command and binding installation skipped (self-transformed template) ');
           }
         }
         function initApp () {
           var defaultTemplates = window.getDefaultTemplates ? getDefaultTemplates() : {};
           appController = new document.AxelDemoEditor("../templates/", defaultTemplates);
           appController.configure({
             baseUrl : '../../axel/axel/bundles',
             xtStylesheet : '../../axel/axel/axel.css',
             path2inputDlg : '../../axel/editor/extras/input.html',
             path2dumpDlg : '../../axel/editor/extras/dump.html',
             path2intro : 'intro.xhtml'
           })
           // late filter registration
           $axel.filter.applyTo({ 'optional' : 'input', 'event' : 'input' });
           // Install Hook to install bindings
           $(document).bind('axel-editor-ready', onTemplateTransformed);
           // configure command for templates with embedded transformation command
           $axel.command.configure('bundlesPath', appController.xttMakeLocalURLFor('../../axel/axel/bundles'))
           appController.run();
         }
         jQuery(function() { initApp(); });
       }());
    </script>
  </head>
  <body class="axel-forms">
    <div id="formular">
      <form id="formUrl" action="javascript:alert('Oops, something went wrong !')">

        <p style="position: relative">
          <label>
            Template file : <input id="url" type="text" name="url" maxlength="200" value=""/>
          </label>

          <input id="transform" type="submit" value="Transform"/>
          <span style="float: right; margin-right: 20px">
            <input id="reset" type="button" value="Reset"/>
            <input id="browseTemplate" class="mozilla" type="button" value="Browse"/>
          </span>
        </p>

        <p style="position: relative">
          <label>Preselection : <select id="foldersList"></select></label> <select id="templatesList"></select>
          <span style="margin-left: 20px">
            Template :
            <input id="sourceTemplate" class="editing" type="button" value="Source"/>
            <input id="dumpSchema" class="editing" type="button" value="Schema"/>
          </span>
          <span style="margin-left: 20px">
            Document :
            <input id="preview" class="editing" style="margin-right: 10px" type="button" value="Preview"/>
            <input id="dump" class="editing" type="button" value="Dump"/>
            <input id="download" class="editing" type="button" value="Download"/>
            <input id="input" class="editing" style="margin-left: 10px" type="button" value="Input"/>
            <input id="load" class="editing" type="button" value="Load"/><input type="file" id="fileToLoad" accept=".xml,.xhtml,application/xhtml+xml,text/xml"/>
            <input id="new" class="editing" style="margin-left: 10px" type="button" value="New"/>
          </span>
        </p>

        <div style="float: right;margin-right: 20px; font-size: 80%">
          Preferences : <input id="preferences" type="button" value="Show" style="font-size: 60%"/>
        </div>

        <p id="titleUrl" class="hint">Enter a template file path in the input field above or preselect one then hit [Transform] to generate the editor</p>

        <!-- Hidden preferences panel -->
        <div id="prefsPanel">
          <p>
            <label>Template folder :
              <input id="templateRepos" type="text" name="templateRepos" maxlength="200" value=""/>
            </label>
            <input id="setTemplateFolder" type="button" value="Set"/>
            <input id="browseTemplateFolder" class="mozilla" type="button" value="Browse"/>
            <span style="position: absolute; right: 30px">
              <input type="checkbox" value="Profile" name="profile"/>
              <label for="profile">Profile</label>
            </span>
          </p>
          <p>
            <label>
              XHR output file :
              <input id="fileName" type="text" name="fileName" maxlength="100" value=""/>
            </label>
            <input id="write" class="editing" type="button" value="Write"/>
            <input id="read" class="editing" type="button" value="Read"/>
            <span style="position: absolute; right: 30px">
              Serialization :
              <input type="radio" value="standard" name="algorithm" checked="true"/>
              <label for="robust">Std</label>
              <input type="radio" value="html" name="algorithm"/>
              <label for="html">Html</label>
              <input type="radio" value="robust" name="algorithm"/>
              <label for="robust">Robust</label>
            </span>
          </p>
        </div>
      </form>
    </div>

    <!-- Editor area (template) -->
    <div id="frameContainer">
      <iframe id="container" src="intro.xhtml"> iframe content </iframe>
    </div>
  </body>
</html>
